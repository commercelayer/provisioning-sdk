{
  "openapi": "3.0.1",
  "info": {
    "title": "Commerce Layer Provisioning API",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "url": "https://commercelayer.io",
      "email": "support@commercelayer.io"
    },
    "description": "Headless Commerce for Global Brands."
  },
  "servers": [
    {
      "url": "https://provisioning.commercelayer.io",
      "description": "Commerce Layer Provisioning API"
    },
    {
      "url": "https://docs.commercelayer.io/provisioning-api",
      "description": "API reference"
    }
  ],
  "paths": {
    "/api_credentials": {
      "get": {
        "operationId": "GET/api_credentials",
        "summary": "List all API credentials",
        "description": "List all API credentials",
        "tags": [
          "api_credentials"
        ],
        "responses": {
          "200": {
            "description": "A list of API credential objects",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/apiCredentialResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "POST/api_credentials",
        "summary": "Creates an API credential",
        "description": "Creates an API credential",
        "tags": [
          "api_credentials"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/apiCredentialCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created API credential object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/apiCredentialResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api_credentials/{apiCredentialId}": {
      "get": {
        "operationId": "GET/api_credentials/apiCredentialId",
        "summary": "Retrieve an API credential",
        "description": "Retrieve an API credential",
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "tags": [
          "api_credentials"
        ],
        "responses": {
          "200": {
            "description": "The API credential object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/apiCredentialResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PATCH/api_credentials/apiCredentialId",
        "summary": "Updates an API credential",
        "description": "Updates an API credential",
        "tags": [
          "api_credentials"
        ],
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/apiCredentialUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated API credential object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/apiCredentialResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DELETE/api_credentials/apiCredentialId",
        "summary": "Delete an API credential",
        "description": "Delete an API credential",
        "tags": [
          "api_credentials"
        ],
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/api_credentials/{apiCredentialId}/organization": {
      "get": {
        "operationId": "GET/apiCredentialId/organization",
        "summary": "Related API credential",
        "description": "Related API credential",
        "tags": [
          "organizations",
          "has_one"
        ],
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The organization associated to the API credential"
          }
        }
      }
    },
    "/api_credentials/{apiCredentialId}/role": {
      "get": {
        "operationId": "GET/apiCredentialId/role",
        "summary": "Related API credential",
        "description": "Related API credential",
        "tags": [
          "roles",
          "has_one"
        ],
        "parameters": [
          {
            "name": "apiCredentialId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The role associated to the API credential"
          }
        }
      }
    },
    "/application_memberships": {
      "get": {
        "operationId": "GET/application_memberships",
        "summary": "List all application memberships",
        "description": "List all application memberships",
        "tags": [
          "application_memberships"
        ],
        "responses": {
          "200": {
            "description": "A list of application membership objects",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationMembershipResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "POST/application_memberships",
        "summary": "Creates an application membership",
        "description": "Creates an application membership",
        "tags": [
          "application_memberships"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/applicationMembershipCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created application membership object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationMembershipResponse"
                }
              }
            }
          }
        }
      }
    },
    "/application_memberships/{applicationMembershipId}": {
      "get": {
        "operationId": "GET/application_memberships/applicationMembershipId",
        "summary": "Retrieve an application membership",
        "description": "Retrieve an application membership",
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "tags": [
          "application_memberships"
        ],
        "responses": {
          "200": {
            "description": "The application membership object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationMembershipResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PATCH/application_memberships/applicationMembershipId",
        "summary": "Updates an application membership",
        "description": "Updates an application membership",
        "tags": [
          "application_memberships"
        ],
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/applicationMembershipUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated application membership object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationMembershipResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DELETE/application_memberships/applicationMembershipId",
        "summary": "Delete an application membership",
        "description": "Delete an application membership",
        "tags": [
          "application_memberships"
        ],
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/application_memberships/{applicationMembershipId}/api_credential": {
      "get": {
        "operationId": "GET/applicationMembershipId/api_credential",
        "summary": "Related application membership",
        "description": "Related application membership",
        "tags": [
          "api_credentials",
          "has_one"
        ],
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The api_credential associated to the application membership"
          }
        }
      }
    },
    "/application_memberships/{applicationMembershipId}/membership": {
      "get": {
        "operationId": "GET/applicationMembershipId/membership",
        "summary": "Related application membership",
        "description": "Related application membership",
        "tags": [
          "memberships",
          "has_one"
        ],
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The membership associated to the application membership"
          }
        }
      }
    },
    "/application_memberships/{applicationMembershipId}/user": {
      "get": {
        "operationId": "GET/applicationMembershipId/user",
        "summary": "Related application membership",
        "description": "Related application membership",
        "tags": [
          "user",
          "has_one"
        ],
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The user associated to the application membership"
          }
        }
      }
    },
    "/application_memberships/{applicationMembershipId}/organization": {
      "get": {
        "operationId": "GET/applicationMembershipId/organization",
        "summary": "Related application membership",
        "description": "Related application membership",
        "tags": [
          "organizations",
          "has_one"
        ],
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The organization associated to the application membership"
          }
        }
      }
    },
    "/application_memberships/{applicationMembershipId}/role": {
      "get": {
        "operationId": "GET/applicationMembershipId/role",
        "summary": "Related application membership",
        "description": "Related application membership",
        "tags": [
          "roles",
          "has_one"
        ],
        "parameters": [
          {
            "name": "applicationMembershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The role associated to the application membership"
          }
        }
      }
    },
    "/memberships": {
      "get": {
        "operationId": "GET/memberships",
        "summary": "List all memberships",
        "description": "List all memberships",
        "tags": [
          "memberships"
        ],
        "responses": {
          "200": {
            "description": "A list of membership objects",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/membershipResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "POST/memberships",
        "summary": "Creates an membership",
        "description": "Creates an membership",
        "tags": [
          "memberships"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/membershipCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created membership object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/membershipResponse"
                }
              }
            }
          }
        }
      }
    },
    "/memberships/{membershipId}": {
      "get": {
        "operationId": "GET/memberships/membershipId",
        "summary": "Retrieve an membership",
        "description": "Retrieve an membership",
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "tags": [
          "memberships"
        ],
        "responses": {
          "200": {
            "description": "The membership object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/membershipResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PATCH/memberships/membershipId",
        "summary": "Updates an membership",
        "description": "Updates an membership",
        "tags": [
          "memberships"
        ],
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/membershipUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated membership object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/membershipResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DELETE/memberships/membershipId",
        "summary": "Delete an membership",
        "description": "Delete an membership",
        "tags": [
          "memberships"
        ],
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/memberships/{membershipId}/resend": {
      "post": {
        "operationId": "POST/memberships/membershipId/resend",
        "summary": "Resend invitation",
        "description": "Resend invitation for the given membership",
        "tags": [
          "memberships"
        ],
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
            }
          }
        },
        "responses": {
          "202": {
            "description": "Confirmation that the invitation has been sent",
            "content": {
            }
          }
        }
      }
    },
    "/memberships/{membershipId}/organization": {
      "get": {
        "operationId": "GET/membershipId/organization",
        "summary": "Related membership",
        "description": "Related membership",
        "tags": [
          "organizations",
          "has_one"
        ],
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The organization associated to the membership"
          }
        }
      }
    },
    "/memberships/{membershipId}/role": {
      "get": {
        "operationId": "GET/membershipId/role",
        "summary": "Related membership",
        "description": "Related membership",
        "tags": [
          "roles",
          "has_one"
        ],
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The role associated to the membership"
          }
        }
      }
    },
    "/memberships/{membershipId}/application_memberships": {
      "get": {
        "operationId": "GET/membershipId/application_memberships",
        "summary": "Related membership",
        "description": "Related membership",
        "tags": [
          "application_memberships",
          "has_many"
        ],
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The application_memberships associated to the membership"
          }
        }
      }
    },
    "/memberships/{membershipId}/versions": {
      "get": {
        "operationId": "GET/membershipId/versions",
        "summary": "Related membership",
        "description": "Related membership",
        "tags": [
          "versions",
          "has_many"
        ],
        "parameters": [
          {
            "name": "membershipId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The versions associated to the membership"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "operationId": "GET/organizations",
        "summary": "List all organizations",
        "description": "List all organizations",
        "tags": [
          "organizations"
        ],
        "responses": {
          "200": {
            "description": "A list of organization objects",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/organizationResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "POST/organizations",
        "summary": "Creates an organization",
        "description": "Creates an organization",
        "tags": [
          "organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/organizationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created organization object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/organizationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "operationId": "GET/organizations/organizationId",
        "summary": "Retrieve an organization",
        "description": "Retrieve an organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "tags": [
          "organizations"
        ],
        "responses": {
          "200": {
            "description": "The organization object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/organizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PATCH/organizations/organizationId",
        "summary": "Updates an organization",
        "description": "Updates an organization",
        "tags": [
          "organizations"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/organizationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated organization object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/organizationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transfer_ownership": {
      "patch": {
        "operationId": "PATCH/organizations/organizationId/transfer_ownership",
        "summary": "Transfer ownership of an organization",
        "description": "Transfers the ownership of an organization to a new owner",
        "tags": [
          "organizations"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The resource's type",
                        "enum": [
                          "organizations"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "The resource's id",
                        "example": "XGZwpOSrWL"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "new_owner_email": {
                            "type": "string",
                            "description": "The user email of the new owner of the organization.",
                            "example": "test@commercelayer.io",
                            "nullable": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The confirmation of the transfer ownership",
            "content": {
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/memberships": {
      "get": {
        "operationId": "GET/organizationId/memberships",
        "summary": "Related organization",
        "description": "Related organization",
        "tags": [
          "memberships",
          "has_many"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The memberships associated to the organization"
          }
        }
      }
    },
    "/organizations/{organizationId}/roles": {
      "get": {
        "operationId": "GET/organizationId/roles",
        "summary": "Related organization",
        "description": "Related organization",
        "tags": [
          "roles",
          "has_many"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The roles associated to the organization"
          }
        }
      }
    },
    "/organizations/{organizationId}/permissions": {
      "get": {
        "operationId": "GET/organizationId/permissions",
        "summary": "Related organization",
        "description": "Related organization",
        "tags": [
          "permissions",
          "has_many"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The permissions associated to the organization"
          }
        }
      }
    },
    "/organizations/{organizationId}/api_credentials": {
      "get": {
        "operationId": "GET/organizationId/api_credentials",
        "summary": "Related organization",
        "description": "Related organization",
        "tags": [
          "api_credentials",
          "has_many"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The api_credentials associated to the organization"
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "operationId": "GET/permissions",
        "summary": "List all permissions",
        "description": "List all permissions",
        "tags": [
          "permissions"
        ],
        "responses": {
          "200": {
            "description": "A list of permission objects",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/permissionResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "POST/permissions",
        "summary": "Creates an permission",
        "description": "Creates an permission",
        "tags": [
          "permissions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/permissionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created permission object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/permissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{permissionId}": {
      "get": {
        "operationId": "GET/permissions/permissionId",
        "summary": "Retrieve an permission",
        "description": "Retrieve an permission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "tags": [
          "permissions"
        ],
        "responses": {
          "200": {
            "description": "The permission object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/permissionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PATCH/permissions/permissionId",
        "summary": "Updates an permission",
        "description": "Updates an permission",
        "tags": [
          "permissions"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/permissionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated permission object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/permissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{permissionId}/organization": {
      "get": {
        "operationId": "GET/permissionId/organization",
        "summary": "Related permission",
        "description": "Related permission",
        "tags": [
          "organizations",
          "has_one"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The organization associated to the permission"
          }
        }
      }
    },
    "/permissions/{permissionId}/role": {
      "get": {
        "operationId": "GET/permissionId/role",
        "summary": "Related permission",
        "description": "Related permission",
        "tags": [
          "roles",
          "has_one"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The role associated to the permission"
          }
        }
      }
    },
    "/permissions/{permissionId}/versions": {
      "get": {
        "operationId": "GET/permissionId/versions",
        "summary": "Related permission",
        "description": "Related permission",
        "tags": [
          "versions",
          "has_many"
        ],
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The versions associated to the permission"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "operationId": "GET/roles",
        "summary": "List all roles",
        "description": "List all roles",
        "tags": [
          "roles"
        ],
        "responses": {
          "200": {
            "description": "A list of role objects",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/roleResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "POST/roles",
        "summary": "Creates an role",
        "description": "Creates an role",
        "tags": [
          "roles"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/roleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created role object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/roleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{roleId}": {
      "get": {
        "operationId": "GET/roles/roleId",
        "summary": "Retrieve an role",
        "description": "Retrieve an role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "tags": [
          "roles"
        ],
        "responses": {
          "200": {
            "description": "The role object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/roleResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PATCH/roles/roleId",
        "summary": "Updates an role",
        "description": "Updates an role",
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/roleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated role object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/roleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{roleId}/organization": {
      "get": {
        "operationId": "GET/roleId/organization",
        "summary": "Related role",
        "description": "Related role",
        "tags": [
          "organizations",
          "has_one"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The organization associated to the role"
          }
        }
      }
    },
    "/roles/{roleId}/permissions": {
      "get": {
        "operationId": "GET/roleId/permissions",
        "summary": "Related role",
        "description": "Related role",
        "tags": [
          "permissions",
          "has_many"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The permissions associated to the role"
          }
        }
      }
    },
    "/roles/{roleId}/memberships": {
      "get": {
        "operationId": "GET/roleId/memberships",
        "summary": "Related role",
        "description": "Related role",
        "tags": [
          "memberships",
          "has_many"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The memberships associated to the role"
          }
        }
      }
    },
    "/roles/{roleId}/api_credentials": {
      "get": {
        "operationId": "GET/roleId/api_credentials",
        "summary": "Related role",
        "description": "Related role",
        "tags": [
          "api_credentials",
          "has_many"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The api_credentials associated to the role"
          }
        }
      }
    },
    "/roles/{roleId}/versions": {
      "get": {
        "operationId": "GET/roleId/versions",
        "summary": "Related role",
        "description": "Related role",
        "tags": [
          "versions",
          "has_many"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "responses": {
          "200": {
            "description": "The versions associated to the role"
          }
        }
      }
    },
    "/user": {
      "get": {
        "operationId": "GET/user/userId",
        "summary": "Retrieve an user",
        "description": "Retrieve an user",
        "parameters": [

        ],
        "tags": [
          "user",
          "singleton"
        ],
        "responses": {
          "200": {
            "description": "The user object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/userResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PATCH/user/userId",
        "summary": "Updates an user",
        "description": "Updates an user",
        "tags": [
          "user",
          "singleton"
        ],
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/userUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated user object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/userResponse"
                }
              }
            }
          }
        }
      }
    },
    "/versions": {
      "get": {
        "operationId": "GET/versions",
        "summary": "List all versions",
        "description": "List all versions",
        "tags": [
          "versions"
        ],
        "responses": {
          "200": {
            "description": "A list of version objects",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/versionResponseList"
                }
              }
            }
          }
        }
      }
    },
    "/versions/{versionId}": {
      "get": {
        "operationId": "GET/versions/versionId",
        "summary": "Retrieve an version",
        "description": "Retrieve an version",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The resource's id"
          }
        ],
        "tags": [
          "versions"
        ],
        "responses": {
          "200": {
            "description": "The version object",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/versionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "apiCredential": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "api_credentials"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The API credential internal name.",
                    "example": "My app",
                    "nullable": false
                  },
                  "kind": {
                    "type": "string",
                    "description": "The API credential kind, can be one of: `webapp`, `sales_channel`, `integration` or the kind of app you want to fork (e.g. `orders`, `imports`, etc.).",
                    "example": "sales_channel",
                    "nullable": false
                  },
                  "confidential": {
                    "type": "boolean",
                    "description": "Indicates if the API credential it's confidential.",
                    "example": true,
                    "nullable": false
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "The API credential redirect URI.",
                    "example": "https://bluebrand.com/img/logo.svg",
                    "nullable": true
                  },
                  "client_id": {
                    "type": "string",
                    "description": "The API credential unique ID.",
                    "example": "xxxx-yyyy-zzzz",
                    "nullable": false
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "The API credential unique secret.",
                    "example": "xxxx-yyyy-zzzz",
                    "nullable": false
                  },
                  "scopes": {
                    "type": "string",
                    "description": "The API credential scopes.",
                    "example": "market:all market:9 market:122 market:6 stock_location:6 stock_location:33",
                    "nullable": false
                  },
                  "expires_in": {
                    "type": "integer",
                    "description": "The lifetime of the access token in seconds (min. `7200`, max. `31536000`. Default is `14400` for Sales channels and `7200` for other client types).",
                    "example": 7200,
                    "nullable": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Indicates the environment the resource belongs to (one of `test` or `live`).",
                    "example": "test",
                    "nullable": false
                  },
                  "custom": {
                    "type": "boolean",
                    "description": "Indicates if the API credential is used to create a custom app (e.g. fork a hosted app).",
                    "example": false,
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "apiCredentialCreate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "api_credentials"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The API credential internal name.",
                    "example": "My app"
                  },
                  "kind": {
                    "type": "string",
                    "description": "The API credential kind, can be one of: `webapp`, `sales_channel`, `integration` or the kind of app you want to fork (e.g. `orders`, `imports`, etc.).",
                    "example": "sales_channel"
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "The API credential redirect URI.",
                    "example": "https://bluebrand.com/img/logo.svg"
                  },
                  "expires_in": {
                    "type": "integer",
                    "description": "The lifetime of the access token in seconds (min. `7200`, max. `31536000`. Default is `14400` for Sales channels and `7200` for other client types).",
                    "example": 7200
                  },
                  "custom": {
                    "type": "boolean",
                    "description": "Indicates if the API credential is used to create a custom app (e.g. fork a hosted app).",
                    "example": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE"
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    }
                  }
                },
                "required": [
                  "name",
                  "kind"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "organization"
                ]
              }
            }
          }
        }
      },
      "apiCredentialUpdate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "api_credentials"
                ]
              },
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The API credential internal name.",
                    "example": "My app",
                    "nullable": false
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "The API credential redirect URI.",
                    "example": "https://bluebrand.com/img/logo.svg",
                    "nullable": true
                  },
                  "expires_in": {
                    "type": "integer",
                    "description": "The lifetime of the access token in seconds (min. `7200`, max. `31536000`. Default is `14400` for Sales channels and `7200` for other client types).",
                    "example": 7200,
                    "nullable": true
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "role": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "apiCredentialResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "api_credentials"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/apiCredential/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "apiCredentialResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCredentialResponse/properties/data"
            }
          }
        }
      },
      "applicationMembership": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "application_memberships"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "api_credential": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "api_credentials"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "membership": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "user"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "applicationMembershipCreate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "application_memberships"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE"
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "api_credential": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "api_credentials"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "membership": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "user": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "user"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "organization": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "api_credential",
                  "membership",
                  "user",
                  "organization",
                  "role"
                ]
              }
            }
          }
        }
      },
      "applicationMembershipUpdate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "application_memberships"
                ]
              },
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "role": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "applicationMembershipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "application_memberships"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/applicationMembership/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "api_credential": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "api_credential"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "membership": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "membership"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "user"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "applicationMembershipResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicationMembershipResponse/properties/data"
            }
          }
        }
      },
      "membership": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "memberships"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "user_email": {
                    "type": "string",
                    "description": "The user email.",
                    "example": "commercelayer@commercelayer.io",
                    "nullable": false
                  },
                  "user_first_name": {
                    "type": "string",
                    "description": "The user first name.",
                    "example": "John",
                    "nullable": false
                  },
                  "user_last_name": {
                    "type": "string",
                    "description": "The user last name.",
                    "example": "Doe",
                    "nullable": false
                  },
                  "status": {
                    "type": "string",
                    "description": "The memberships status. One of `pending` (default), `active`.",
                    "example": "pending",
                    "nullable": false,
                    "enum": [
                      "pending",
                      "active"
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "application_memberships": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "application_memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "versions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "versions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "membershipCreate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "memberships"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "user_email": {
                    "type": "string",
                    "description": "The user email.",
                    "example": "commercelayer@commercelayer.io"
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE"
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    }
                  }
                },
                "required": [
                  "user_email"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "application_memberships": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "application_memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "organization",
                  "role"
                ]
              }
            }
          }
        }
      },
      "membershipUpdate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "memberships"
                ]
              },
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "role": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "application_memberships": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "application_memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "membershipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "memberships"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/membership/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "application_memberships": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "application_memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "versions": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "versions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "membershipResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/membershipResponse/properties/data"
            }
          }
        }
      },
      "organization": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "organizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The organization's internal name.",
                    "example": "The Blue Brand",
                    "nullable": false
                  },
                  "slug": {
                    "type": "string",
                    "description": "The organization's slug name.",
                    "example": "the-blue-brand",
                    "nullable": false
                  },
                  "domain": {
                    "type": "string",
                    "description": "The organization's domain.",
                    "example": "the-blue-brand.commercelayer.io",
                    "nullable": false
                  },
                  "support_phone": {
                    "type": "string",
                    "description": "The organization's support phone.",
                    "example": "+01 30800857",
                    "nullable": true
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The organization's support email.",
                    "example": "support@bluebrand.com",
                    "nullable": true
                  },
                  "logo_url": {
                    "type": "string",
                    "description": "The URL to the organization's logo.",
                    "example": "https://bluebrand.com/img/logo.svg",
                    "nullable": true
                  },
                  "favicon_url": {
                    "type": "string",
                    "description": "The URL to the organization's favicon.",
                    "example": "https://bluebrand.com/img/favicon.ico",
                    "nullable": true
                  },
                  "primary_color": {
                    "type": "string",
                    "description": "The organization's primary color. Format is HEX (starts with `#` and it's followed by six letters and/or numbers).",
                    "example": "#C8984E",
                    "nullable": true
                  },
                  "contrast_color": {
                    "type": "string",
                    "description": "The organization's contrast color. Format is HEX (starts with `#` and it's followed by six letters and/or numbers).",
                    "example": "#FFFFCC",
                    "nullable": true
                  },
                  "gtm_id": {
                    "type": "string",
                    "description": "The organization's Google Tag Manager ID.",
                    "example": "GTM-5FJXX6",
                    "nullable": true
                  },
                  "gtm_id_test": {
                    "type": "string",
                    "description": "The organization's Google Tag Manager ID for test.",
                    "example": "GTM-5FJXX7",
                    "nullable": true
                  },
                  "discount_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has discount disabled.",
                    "example": false,
                    "nullable": true
                  },
                  "account_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has account disabled.",
                    "example": false,
                    "nullable": true
                  },
                  "acceptance_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has acceptance disabled.",
                    "example": false,
                    "nullable": true
                  },
                  "max_concurrent_promotions": {
                    "type": "integer",
                    "description": "The maximum number of active concurrent promotions allowed for your organization.",
                    "example": 10,
                    "nullable": false
                  },
                  "max_concurrent_imports": {
                    "type": "integer",
                    "description": "The maximum number of concurrent imports allowed for your organization.",
                    "example": 30,
                    "nullable": false
                  },
                  "associated_markets": {
                    "type": "object",
                    "description": "An object that contains the markets of the organization.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": false
                  },
                  "region": {
                    "type": "string",
                    "description": "The region where the organization it's located, default value it's `eu-west-1`.",
                    "example": "eu-west-1",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "memberships": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "roles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "permissions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "api_credentials": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "api_credentials"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "organizationCreate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "organizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The organization's internal name.",
                    "example": "The Blue Brand"
                  },
                  "support_phone": {
                    "type": "string",
                    "description": "The organization's support phone.",
                    "example": "+01 30800857"
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The organization's support email.",
                    "example": "support@bluebrand.com"
                  },
                  "logo_url": {
                    "type": "string",
                    "description": "The URL to the organization's logo.",
                    "example": "https://bluebrand.com/img/logo.svg"
                  },
                  "favicon_url": {
                    "type": "string",
                    "description": "The URL to the organization's favicon.",
                    "example": "https://bluebrand.com/img/favicon.ico"
                  },
                  "primary_color": {
                    "type": "string",
                    "description": "The organization's primary color. Format is HEX (starts with `#` and it's followed by six letters and/or numbers).",
                    "example": "#C8984E"
                  },
                  "contrast_color": {
                    "type": "string",
                    "description": "The organization's contrast color. Format is HEX (starts with `#` and it's followed by six letters and/or numbers).",
                    "example": "#FFFFCC"
                  },
                  "gtm_id": {
                    "type": "string",
                    "description": "The organization's Google Tag Manager ID.",
                    "example": "GTM-5FJXX6"
                  },
                  "gtm_id_test": {
                    "type": "string",
                    "description": "The organization's Google Tag Manager ID for test.",
                    "example": "GTM-5FJXX7"
                  },
                  "discount_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has discount disabled.",
                    "example": false
                  },
                  "account_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has account disabled.",
                    "example": false
                  },
                  "acceptance_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has acceptance disabled.",
                    "example": false
                  },
                  "region": {
                    "type": "string",
                    "description": "The region where the organization it's located, default value it's `eu-west-1`.",
                    "example": "eu-west-1"
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE"
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "organizationUpdate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "organizations"
                ]
              },
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The organization's internal name.",
                    "example": "The Blue Brand",
                    "nullable": false
                  },
                  "support_phone": {
                    "type": "string",
                    "description": "The organization's support phone.",
                    "example": "+01 30800857",
                    "nullable": true
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The organization's support email.",
                    "example": "support@bluebrand.com",
                    "nullable": true
                  },
                  "logo_url": {
                    "type": "string",
                    "description": "The URL to the organization's logo.",
                    "example": "https://bluebrand.com/img/logo.svg",
                    "nullable": true
                  },
                  "favicon_url": {
                    "type": "string",
                    "description": "The URL to the organization's favicon.",
                    "example": "https://bluebrand.com/img/favicon.ico",
                    "nullable": true
                  },
                  "primary_color": {
                    "type": "string",
                    "description": "The organization's primary color. Format is HEX (starts with `#` and it's followed by six letters and/or numbers).",
                    "example": "#C8984E",
                    "nullable": true
                  },
                  "contrast_color": {
                    "type": "string",
                    "description": "The organization's contrast color. Format is HEX (starts with `#` and it's followed by six letters and/or numbers).",
                    "example": "#FFFFCC",
                    "nullable": true
                  },
                  "gtm_id": {
                    "type": "string",
                    "description": "The organization's Google Tag Manager ID.",
                    "example": "GTM-5FJXX6",
                    "nullable": true
                  },
                  "gtm_id_test": {
                    "type": "string",
                    "description": "The organization's Google Tag Manager ID for test.",
                    "example": "GTM-5FJXX7",
                    "nullable": true
                  },
                  "discount_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has discount disabled.",
                    "example": false,
                    "nullable": false
                  },
                  "account_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has account disabled.",
                    "example": false,
                    "nullable": false
                  },
                  "acceptance_disabled": {
                    "type": "boolean",
                    "description": "Indicates if organization has acceptance disabled.",
                    "example": false,
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "organizationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "organizations"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/organization/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "memberships": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "roles": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "permissions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "api_credentials": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "api_credentials"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "organizationResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organizationResponse/properties/data"
            }
          }
        }
      },
      "permission": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "permissions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "can_create": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to create rights.",
                    "example": false,
                    "nullable": false
                  },
                  "can_read": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to read rights.",
                    "example": false,
                    "nullable": false
                  },
                  "can_update": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to update rights.",
                    "example": false,
                    "nullable": false
                  },
                  "can_destroy": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to destroy rights.",
                    "example": false,
                    "nullable": false
                  },
                  "subject": {
                    "type": "string",
                    "description": "The resource where this permission is applied.",
                    "example": "",
                    "nullable": false
                  },
                  "restrictions": {
                    "type": "object",
                    "description": "An object that contains additional restrictions.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": false
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "versions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "versions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "permissionCreate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "permissions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "can_create": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to create rights.",
                    "example": false
                  },
                  "can_read": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to read rights.",
                    "example": false
                  },
                  "can_update": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to update rights.",
                    "example": false
                  },
                  "can_destroy": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to destroy rights.",
                    "example": false
                  },
                  "subject": {
                    "type": "string",
                    "description": "The resource where this permission is applied.",
                    "example": ""
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE"
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    }
                  }
                },
                "required": [
                  "can_create",
                  "can_read",
                  "can_update",
                  "can_destroy",
                  "subject"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "role": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "roles"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "role"
                ]
              }
            }
          }
        }
      },
      "permissionUpdate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "permissions"
                ]
              },
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "can_create": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to create rights.",
                    "example": false,
                    "nullable": false
                  },
                  "can_read": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to read rights.",
                    "example": false,
                    "nullable": false
                  },
                  "can_update": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to update rights.",
                    "example": false,
                    "nullable": false
                  },
                  "can_destroy": {
                    "type": "boolean",
                    "description": "Determines if the permission have access to destroy rights.",
                    "example": false,
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "permissionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "permissions"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/permission/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "role": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "versions": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "versions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "permissionResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/permissionResponse/properties/data"
            }
          }
        }
      },
      "role": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "roles"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The role name.",
                    "example": "Custom role",
                    "nullable": false
                  },
                  "kind": {
                    "type": "string",
                    "description": "The kind of role, one of: `custom`, `admin`, `read_only`",
                    "example": "custom",
                    "nullable": false
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "permissions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "memberships": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "api_credentials": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "api_credentials"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  },
                  "versions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "versions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roleCreate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "roles"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The role name.",
                    "example": "Custom role"
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE"
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "required": [
                      "data"
                    ],
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organizations"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource's id",
                            "example": "XGZwpOSrWL"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "organization"
                ]
              }
            }
          }
        }
      },
      "roleUpdate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "roles"
                ]
              },
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The role name.",
                    "example": "Custom role",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "roleResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "roles"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/role/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "organization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "permissions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "memberships": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "memberships"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "api_credentials": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "api_credentials"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  },
                  "versions": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "URL"
                          },
                          "related": {
                            "type": "string",
                            "description": "URL"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The resource's type",
                            "enum": [
                              "versions"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "The resource ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roleResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/roleResponse/properties/data"
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "user"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user email.",
                    "example": "user@commercelayer.io",
                    "nullable": false
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The user first name.",
                    "example": "John",
                    "nullable": false
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The user last name.",
                    "example": "Doe",
                    "nullable": false
                  },
                  "time_zone": {
                    "type": "string",
                    "description": "The user preferred timezone.",
                    "example": "UTC",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "userUpdate": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "user"
                ]
              },
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user email.",
                    "example": "user@commercelayer.io",
                    "nullable": false
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The user first name.",
                    "example": "John",
                    "nullable": false
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The user last name.",
                    "example": "Doe",
                    "nullable": false
                  },
                  "time_zone": {
                    "type": "string",
                    "description": "The user preferred timezone.",
                    "example": "UTC",
                    "nullable": true
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "userResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "user"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/user/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "userResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userResponse/properties/data"
            }
          }
        }
      },
      "version": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "versions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "resource_type": {
                    "type": "string",
                    "description": "The type of the versioned resource.",
                    "example": "roles",
                    "nullable": false
                  },
                  "resource_id": {
                    "type": "string",
                    "description": "The versioned resource ID.",
                    "example": "PzdJhdLdYV",
                    "nullable": false
                  },
                  "event": {
                    "type": "string",
                    "description": "The event which generates the version.",
                    "example": "update",
                    "nullable": false
                  },
                  "changes": {
                    "type": "object",
                    "description": "The object changes payload.",
                    "example": {
                      "name": [
                        "previous",
                        "new"
                      ]
                    },
                    "nullable": false
                  },
                  "who": {
                    "type": "object",
                    "description": "Information about who triggered the change, only showed when it's from a JWT token.",
                    "example": {
                      "application": {
                        "id": "DNOPYiZYpn",
                        "kind": "integration",
                        "public": true
                      }
                    },
                    "nullable": false
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Time at which the resource was created.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Time at which the resource was last updated.",
                    "example": "2018-01-01T12:00:00.000Z",
                    "nullable": false
                  },
                  "reference": {
                    "type": "string",
                    "description": "A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.",
                    "example": "ANY-EXTERNAL-REFEFERNCE",
                    "nullable": true
                  },
                  "reference_origin": {
                    "type": "string",
                    "description": "Any identifier of the third party system that defines the reference code.",
                    "example": "ANY-EXTERNAL-REFEFERNCE-ORIGIN",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.",
                    "example": {
                      "foo": "bar"
                    },
                    "nullable": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "versionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource's id",
                "example": "XGZwpOSrWL"
              },
              "type": {
                "type": "string",
                "description": "The resource's type",
                "enum": [
                  "versions"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "URL"
                  }
                }
              },
              "attributes": {
                "$ref": "#/components/schemas/version/properties/data/properties/attributes"
              },
              "relationships": {
                "type": "object",
                "properties": {
                }
              }
            }
          }
        }
      },
      "versionResponseList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/versionResponse/properties/data"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "singleton",
      "description": "singleton resource"
    },
    {
      "name": "api_credentials",
      "description": "resource type"
    },
    {
      "name": "has_one",
      "description": "relationship kind"
    },
    {
      "name": "application_memberships",
      "description": "resource type"
    },
    {
      "name": "memberships",
      "description": "resource type"
    },
    {
      "name": "has_many",
      "description": "relationship kind"
    },
    {
      "name": "organizations",
      "description": "resource type"
    },
    {
      "name": "permissions",
      "description": "resource type"
    },
    {
      "name": "roles",
      "description": "resource type"
    },
    {
      "name": "user",
      "description": "resource type"
    },
    {
      "name": "versions",
      "description": "resource type"
    }
  ],
  "security": [
    {
      "bearerAuth": [

      ]
    }
  ]
}